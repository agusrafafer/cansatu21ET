/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ues21.cansat21.vista;

import edu.ues21.cansat21.control.Controlador;
import edu.ues21.cansat21.modelo.ArchivoSeleccionado;
import edu.ues21.cansat21.modelo.Helper;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.dnd.DropTarget;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Properties;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.TransferHandler;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import jiconfont.icons.font_awesome.FontAwesome;
import jiconfont.icons.google_material_design_icons.GoogleMaterialDesignIcons;
import jiconfont.swing.IconFontSwing;

/**
 *
 * @author agustin
 */
public class Principal extends javax.swing.JFrame implements InterfazVista {

    private static final long serialVersionUID = 1L;
    private String dirArchivosCsv = null;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        menuOpciones = new javax.swing.JPopupMenu();
        itemConfiguracion = new javax.swing.JMenuItem();
        itemAyuda = new javax.swing.JMenuItem();
        itemLicencia = new javax.swing.JMenuItem();
        Licencia = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLicencia = new javax.swing.JTextArea();
        Ayuda = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Configuracion = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSplitPane = new javax.swing.JSplitPane();
        panelIzquierda = new javax.swing.JPanel();
        jButtonTemp = new javax.swing.JButton();
        jButtonAltitud = new javax.swing.JButton();
        jButtonPresion = new javax.swing.JButton();
        jButtonSelArchivo = new javax.swing.JButton();
        lblArchivoSeleccionado = new javax.swing.JLabel();
        panelMenu = new javax.swing.JPanel();
        lblAmburguesa = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(11, 0), new java.awt.Dimension(11, 0), new java.awt.Dimension(11, 32767));
        lblOpciones = new javax.swing.JLabel();
        cmbArchivosSel = new javax.swing.JComboBox<>();
        jButtonQuitarArchSel = new javax.swing.JButton();
        jButtonIncliAcel = new javax.swing.JButton();
        jButtonRotaGiro = new javax.swing.JButton();
        panelDerecha = new javax.swing.JPanel();
        panelTile1 = new javax.swing.JPanel();
        panelTile2 = new javax.swing.JPanel();
        panelTile3 = new javax.swing.JPanel();
        panelTile4 = new javax.swing.JPanel();
        panelTile5 = new javax.swing.JPanel();
        panelTile6 = new javax.swing.JPanel();

        itemConfiguracion.setText("Configuraci√≥n");
        itemConfiguracion.setActionCommand("CONFIG_ACCION");
        Icon iconConfig = IconFontSwing.buildIcon(GoogleMaterialDesignIcons.BUILD, 14, new Color(0, 0, 0));
        itemConfiguracion.setIcon(iconConfig);
        menuOpciones.add(itemConfiguracion);

        itemAyuda.setText("Ayuda");
        itemAyuda.setActionCommand("AYUDA_ACCION");
        Icon iconAyuda = IconFontSwing.buildIcon(GoogleMaterialDesignIcons.HELP, 14, new Color(0, 0, 0));
        itemAyuda.setIcon(iconAyuda);
        menuOpciones.add(itemAyuda);

        itemLicencia.setText("Licencia");
        itemLicencia.setActionCommand("LICENCIA_ACCION");
        Icon iconLicencia = IconFontSwing.buildIcon(GoogleMaterialDesignIcons.CLASS, 14, new Color(0, 0, 0));
        itemLicencia.setIcon(iconLicencia);
        menuOpciones.add(itemLicencia);

        Licencia.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Licencia.setTitle("Licencia");
        Licencia.setAlwaysOnTop(true);
        Licencia.setModal(true);

        txtLicencia.setEditable(false);
        txtLicencia.setColumns(20);
        txtLicencia.setRows(5);
        jScrollPane1.setViewportView(txtLicencia);

        javax.swing.GroupLayout LicenciaLayout = new javax.swing.GroupLayout(Licencia.getContentPane());
        Licencia.getContentPane().setLayout(LicenciaLayout);
        LicenciaLayout.setHorizontalGroup(
            LicenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        LicenciaLayout.setVerticalGroup(
            LicenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        Ayuda.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Ayuda.setTitle("Ayuda");
        Ayuda.setAlwaysOnTop(true);
        Ayuda.setModal(true);
        Ayuda.setResizable(false);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/construccion.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout AyudaLayout = new javax.swing.GroupLayout(Ayuda.getContentPane());
        Ayuda.getContentPane().setLayout(AyudaLayout);
        AyudaLayout.setHorizontalGroup(
            AyudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        AyudaLayout.setVerticalGroup(
            AyudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        Configuracion.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Configuracion.setAlwaysOnTop(true);
        Configuracion.setModal(true);
        Configuracion.setResizable(false);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/construccion.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ConfiguracionLayout = new javax.swing.GroupLayout(Configuracion.getContentPane());
        Configuracion.getContentPane().setLayout(ConfiguracionLayout);
        ConfiguracionLayout.setHorizontalGroup(
            ConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        ConfiguracionLayout.setVerticalGroup(
            ConfiguracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CANSAT ESTACION TERRENA");
        setBackground(new java.awt.Color(254, 254, 254));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/iconos/satelliteantenna.png")));
        setMinimumSize(new java.awt.Dimension(800, 600));

        jSplitPane.setBackground(new java.awt.Color(254, 254, 254));
        jSplitPane.setDividerLocation(200);
        jSplitPane.setDividerSize(5);
        jSplitPane.setPreferredSize(new java.awt.Dimension(800, 600));

        panelIzquierda.setBackground(new java.awt.Color(137, 196, 244));

        jButtonTemp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonTemp.setForeground(new java.awt.Color(130, 130, 130));
        jButtonTemp.setText("Temperatura");
        jButtonTemp.setActionCommand("TemperaturaGrafico");
        jButtonTemp.setPreferredSize(new java.awt.Dimension(70, 30));
        jButtonTemp.setRolloverEnabled(true);
        //String path = this.getClass().getResource("/iconos/icono-temperatura.gif").toString();
        ////InputStream is = this.getClass().getResourceAsStream("/iconos/icono-temperatura.gif");//para √°rbol
        //
        //ImageIcon animatedGif = new ImageIcon(path);
        //jButtonTemp.setRolloverIcon(animatedGif);
        //animatedGif.getImage().flush();
        Icon iconTemp = IconFontSwing.buildIcon(FontAwesome.THERMOMETER_HALF, 18, new Color(130, 130, 130));
        jButtonTemp.setIcon(iconTemp);

        jButtonAltitud.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonAltitud.setForeground(new java.awt.Color(130, 130, 130));
        jButtonAltitud.setText("Altitud");
        jButtonAltitud.setActionCommand("AltitudGrafico");
        jButtonAltitud.setPreferredSize(new java.awt.Dimension(70, 30));
        Icon iconH = IconFontSwing.buildIcon(FontAwesome.ARROWS_V, 18, new Color(130, 130, 130));
        jButtonAltitud.setIcon(iconH);

        jButtonPresion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonPresion.setForeground(new java.awt.Color(130, 130, 130));
        jButtonPresion.setText("Presi√≥n");
        jButtonPresion.setActionCommand("PresionGrafico");
        jButtonPresion.setPreferredSize(new java.awt.Dimension(70, 30));
        Icon iconPresion = IconFontSwing.buildIcon(FontAwesome.TACHOMETER, 18, new Color(130, 130, 130));
        jButtonPresion.setIcon(iconPresion);

        jButtonSelArchivo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonSelArchivo.setForeground(new java.awt.Color(130, 130, 130));
        jButtonSelArchivo.setToolTipText("Seleccione archivos...");
        jButtonSelArchivo.setActionCommand("ELEGIR_CSV_ACCION");
        Icon iconArchivo = IconFontSwing.buildIcon(FontAwesome.FILE, 14, new Color(130, 130, 130));
        jButtonSelArchivo.setIcon(iconArchivo);

        lblArchivoSeleccionado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblArchivoSeleccionado.setForeground(new java.awt.Color(130, 130, 130));

        panelMenu.setBackground(new java.awt.Color(54, 100, 194));
        panelMenu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelMenu.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        panelMenu.setLayout(new java.awt.GridBagLayout());

        lblAmburguesa.setBackground(new java.awt.Color(54, 100, 194));
        lblAmburguesa.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblAmburguesa.setForeground(new java.awt.Color(255, 255, 255));
        Icon icon = IconFontSwing.buildIcon(GoogleMaterialDesignIcons.MENU, 18, new Color(255, 255, 255));
        lblAmburguesa.setIcon(icon);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        panelMenu.add(lblAmburguesa, gridBagConstraints);
        lblAmburguesa.getAccessibleContext().setAccessibleName("lblAmburguesa");

        jLabel1.setBackground(new java.awt.Color(54, 100, 194));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Menu");
        jLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panelMenu.add(jLabel1, gridBagConstraints);
        panelMenu.add(filler1, new java.awt.GridBagConstraints());

        Icon iconOpc = IconFontSwing.buildIcon(GoogleMaterialDesignIcons.SETTINGS, 18, new Color(255, 255, 255));
        lblOpciones.setIcon(iconOpc);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        panelMenu.add(lblOpciones, gridBagConstraints);
        lblOpciones.getAccessibleContext().setAccessibleName("lblOpciones");

        jButtonQuitarArchSel.setToolTipText("Quitar el archivo seleccionado");
        jButtonQuitarArchSel.setActionCommand("BORRAR_ARCH_SEL_ACCION");
        Icon iconQuitarArchivo = IconFontSwing.buildIcon(FontAwesome.TRASH, 14, new Color(130, 130, 130));
        jButtonQuitarArchSel.setIcon(iconQuitarArchivo);

        jButtonIncliAcel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonIncliAcel.setForeground(new java.awt.Color(130, 130, 130));
        jButtonIncliAcel.setText("Inclinaci√≥n (Acel)");
        jButtonIncliAcel.setActionCommand("AcelerometroGrafico");
        jButtonIncliAcel.setPreferredSize(new java.awt.Dimension(70, 30));
        Icon iconIncliAcel = IconFontSwing.buildIcon(FontAwesome.COMPASS, 18, new Color(130, 130, 130));
        jButtonIncliAcel.setIcon(iconIncliAcel);

        jButtonRotaGiro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonRotaGiro.setForeground(new java.awt.Color(130, 130, 130));
        jButtonRotaGiro.setText("Rotaci√≥n (Giro)");
        jButtonRotaGiro.setActionCommand("GiroscopoGrafico");
        jButtonRotaGiro.setPreferredSize(new java.awt.Dimension(70, 30));
        Icon iconRotaGiro = IconFontSwing.buildIcon(FontAwesome.RAVELRY, 18, new Color(130, 130, 130));
        jButtonRotaGiro.setIcon(iconRotaGiro);

        javax.swing.GroupLayout panelIzquierdaLayout = new javax.swing.GroupLayout(panelIzquierda);
        panelIzquierda.setLayout(panelIzquierdaLayout);
        panelIzquierdaLayout.setHorizontalGroup(
            panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelIzquierdaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIzquierdaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblArchivoSeleccionado))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIzquierdaLayout.createSequentialGroup()
                        .addComponent(jButtonSelArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbArchivosSel, 0, 106, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonQuitarArchSel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonTemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAltitud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPresion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonIncliAcel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRotaGiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelIzquierdaLayout.setVerticalGroup(
            panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIzquierdaLayout.createSequentialGroup()
                .addComponent(panelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelIzquierdaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbArchivosSel)
                    .addComponent(jButtonQuitarArchSel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblArchivoSeleccionado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSelArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAltitud, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPresion, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonIncliAcel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRotaGiro, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        jSplitPane.setLeftComponent(panelIzquierda);

        panelDerecha.setBackground(new java.awt.Color(254, 254, 254));
        panelDerecha.setLayout(new java.awt.GridLayout(3, 3, 10, 10));

        panelTile1.setLayout(new java.awt.BorderLayout());
        panelDerecha.add(panelTile1);
        //panelTile1.setDropTarget(new DropTarget() {
            //                    @Override
            //                    public synchronized void drop(DropTargetDropEvent evt) {
                //                        panelTile1.add(new JLabel("BOTON ARRASTRADO"));
                //                        panelTile1.revalidate();
                //                        panelTile1.repaint();
                //                    }
            //                });

    panelTile2.setLayout(new java.awt.BorderLayout());
    panelDerecha.add(panelTile2);

    panelTile3.setLayout(new java.awt.BorderLayout());
    panelDerecha.add(panelTile3);

    panelTile4.setLayout(new java.awt.BorderLayout());
    panelDerecha.add(panelTile4);

    panelTile5.setLayout(new java.awt.BorderLayout());
    panelDerecha.add(panelTile5);

    panelTile6.setLayout(new java.awt.BorderLayout());
    panelDerecha.add(panelTile6);

    jSplitPane.setRightComponent(panelDerecha);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Ayuda;
    private javax.swing.JDialog Configuracion;
    private javax.swing.JDialog Licencia;
    private javax.swing.JComboBox<ArchivoSeleccionado> cmbArchivosSel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JMenuItem itemAyuda;
    private javax.swing.JMenuItem itemConfiguracion;
    private javax.swing.JMenuItem itemLicencia;
    private javax.swing.JButton jButtonAltitud;
    private javax.swing.JButton jButtonIncliAcel;
    private javax.swing.JButton jButtonPresion;
    private javax.swing.JButton jButtonQuitarArchSel;
    private javax.swing.JButton jButtonRotaGiro;
    private javax.swing.JButton jButtonSelArchivo;
    private javax.swing.JButton jButtonTemp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JLabel lblAmburguesa;
    private javax.swing.JLabel lblArchivoSeleccionado;
    private javax.swing.JLabel lblOpciones;
    private javax.swing.JPopupMenu menuOpciones;
    private javax.swing.JPanel panelDerecha;
    private javax.swing.JPanel panelIzquierda;
    private javax.swing.JPanel panelMenu;
    public javax.swing.JPanel panelTile1;
    public javax.swing.JPanel panelTile2;
    public javax.swing.JPanel panelTile3;
    public javax.swing.JPanel panelTile4;
    public javax.swing.JPanel panelTile5;
    public javax.swing.JPanel panelTile6;
    private javax.swing.JTextArea txtLicencia;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setControlador(Controlador c) {
        for (Component component : this.panelIzquierda.getComponents()) {
            if (component instanceof JButton) {
                if (((JButton) component).getActionCommand().contains("ACCION")) {
                    ((JButton) component).addActionListener(c);
                } else {
                    ((JButton) component).setTransferHandler(new TransferHandler("icon"));
                    ((JButton) component).addMouseMotionListener(c);
                }
            }
        }
        for (Component component : this.panelMenu.getComponents()) {
            if (component instanceof JLabel) {
                String nombreLabel = component.getAccessibleContext().getAccessibleName();
                if (nombreLabel.equals("lblAmburguesa") || nombreLabel.equals("lblOpciones")) {
                    ((JLabel) component).addMouseListener(c);
                }
            }
        }
        for (Component component : this.menuOpciones.getComponents()) {
            if (component instanceof JMenuItem) {
                if (((JMenuItem) component).getActionCommand().contains("ACCION")) {
                    ((JMenuItem) component).addActionListener(c);
                }
            }
        }
        for (Component component : this.panelDerecha.getComponents()) {
            if (component instanceof JPanel) {
                ((JPanel) component).setDropTarget(new DropTarget(component, c));
            }
        }
        this.addWindowListener(c);
    }

    @Override
    public void iniciaVista() {
        setLocationRelativeTo(null);
        setVisible(true);
        try {
            Properties prop = Helper.cargarArchivoConfig();
            String compartir = (String) prop.get("compartirDatos");
            if (compartir.equals("NO")) {
                if (JOptionPane.showConfirmDialog(null,
                        "¬øDesea compartir los datos generados por el uso de la aplicaci√≥n para colaborar con el equipo de investigaci√≥n que la creo?",
                        "Informaci√≥n",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    prop.setProperty("compartirDatos", "SI");
                    JOptionPane.showMessageDialog(this, "Gracias por compartir su informaci√≥n con la ciencia", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            prop.setProperty("ultimoAcceso", String.valueOf(System.currentTimeMillis()));
            Helper.guardarArchivoConfig(prop);
        } catch (IOException | URISyntaxException ex) {
            imprimeMensaje(ex);
        }

    }

    @Override
    public void imprimeMensaje(Exception... e) {
        if (e.length > 0) {
            JOptionPane.showMessageDialog(this, "Error: " + e[0].getMessage(), "Informaci√≥n", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Operaci√≥n ejecutada con exito", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    @Override
    public File[] seleccionarArchivos() {
        JFileChooser jfc;
        if(dirArchivosCsv == null){
            jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        } else {
            jfc = new JFileChooser(dirArchivosCsv);
        }
        jfc.setDialogTitle("Seleccione 1 o m√°s archivo del CANSAT");
        jfc.setMultiSelectionEnabled(true);
        jfc.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo CSV", "CSV");
        jfc.addChoosableFileFilter(filter);
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            if(jfc.getSelectedFiles().length > 0) {
                dirArchivosCsv = jfc.getSelectedFiles()[0].getAbsoluteFile().getParent();
            }
            return jfc.getSelectedFiles();
        }
        return null;
    }

    @Override
    public void limpiaVista() {
        lblArchivoSeleccionado.setText("");
        lblArchivoSeleccionado.setToolTipText(null);
    }

    @Override
    public void cargarComboArchivosSel(ArchivoSeleccionado archivosSel) {
        boolean existe = false;
        for (int i = 0; i < cmbArchivosSel.getItemCount(); i++) {
            ArchivoSeleccionado archi = cmbArchivosSel.getItemAt(i);
            if(archi.getNombreArchivo().equals(archivosSel.getNombreArchivo())){
               existe = true; 
               break;
            }
        }
        if(existe){
           imprimeMensaje(new Exception("Ese archivo ya fue cargado"));
           return;
        }
        cmbArchivosSel.addItem(archivosSel);
    }

    @Override
    public void quitarItemComboArchivoSel() {
        int idx = cmbArchivosSel.getSelectedIndex();
        if (idx > -1) {
            cmbArchivosSel.removeItemAt(idx);
        }
        cmbArchivosSel.revalidate();
        cmbArchivosSel.repaint();
    }

    @Override
    public String pathArchivoSeleccionado() {
        ArchivoSeleccionado archivo = (ArchivoSeleccionado) cmbArchivosSel.getSelectedItem();
        return archivo != null ? archivo.getPathArchivo() : null;
    }

    @Override
    public void cierraSplitPane(int posicion
    ) {
        jSplitPane.setDividerLocation(posicion);
    }

    @Override
    public void cierraSistema() {
        if (JOptionPane.showConfirmDialog(null,
                "¬øSeguro desea salir?", "Informaci√≥n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    @Override
    public void muestraMenuOpciones() {
        Point p = this.lblOpciones.getLocationOnScreen();
        menuOpciones.setLocation(new Point((int) p.getX(), (int) (p.getY() + 20.0d)));
        menuOpciones.setVisible(!this.menuOpciones.isVisible());
    }

    @Override
    public void muestraDialogoMenuOpciones(String nombreDialogo) {
        switch (nombreDialogo.toUpperCase()) {
            case "CONFIGURACION":
                Configuracion.pack();
                Configuracion.setLocationRelativeTo(this);
                Configuracion.setSize(600, 400);
                Configuracion.setVisible(true);
                break;
            case "AYUDA":
                Ayuda.pack();
                Ayuda.setLocationRelativeTo(this);
                Ayuda.setSize(600, 400);
                Ayuda.setVisible(true);
                break;
            case "LICENCIA":
                String lic = "";
                 {
                    try {
                        lic = Helper.cargarLicencia();
                    } catch (IOException ex) {
                        imprimeMensaje(ex);
                    }
                }
                this.txtLicencia.setText(lic);
                Licencia.pack();
                Licencia.setLocationRelativeTo(this);
                Licencia.setSize(600, 400);
                Licencia.setVisible(true);
                break;

        }
    }
}
